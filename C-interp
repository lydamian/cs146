#!/bin/bash

#Filename: C-interp
# Description: Write a short shell script claled "C-interp" which
# is intended to have soft links point at it, and pretends
# to be a C language interpreter. That is, if you have C file "foo.c", then
# you would make a link "ln -s C-interp foo". Then, what C-interp does, when called
# as "foo", is to compile "foo.c" and run the resulting executable on the
# arguments given to "foo".

echo "C-interp starting"

Filename=$0
TEMP_DIR=''

# ====== FUNCTIONS =================================
gen_rand_dirname(){
	TEMP_DIR=$(mktemp -d /tmp/XXX) || { echo "Failed to create temp file"; exit 1; }
}

cleanup(){
	rm -r $TEMP_DIR
}
#====== END FUNCTION DECLARATIONS =================

# ensure that filename is a valid file

# STORE ALL EXECUTABLES AND TEMP FILES IN A TEMPORARY DIRECTORY
gen_rand_dirname

# create a trap to catch signals, and delete the temporary dir
trap cleanup 1 2 3 15

# compile Filename.c and store in tempdir
gcc "$Filename.c" -o "$TEMP_DIR/$Filename"

# run the executable
$TEMP_DIR/$Filename $@

# cleanup - delete all temporary files and directories
cleanup
